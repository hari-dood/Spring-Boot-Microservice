package com.example.service;

import com.example.model.Inventory;
import com.example.model.Product;
import com.example.repository.InventoryRepository;
import com.example.repository.ProductRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class InventoryService {

    @Autowired
    private InventoryRepository inventoryRepository;

    @Autowired
    private ProductRepository productRepository;

    // Update product inventory
    public Inventory updateInventory(Long productId, Integer stockQuantity) {
        Product product = productRepository.findById(productId).orElseThrow(() -> new RuntimeException("Product not found"));
        Inventory inventory = inventoryRepository.findByProduct(product);

        if (inventory != null) {
            inventory.setStockQuantity(stockQuantity);
        } else {
            inventory = new Inventory();
            inventory.setProduct(product);
            inventory.setStockQuantity(stockQuantity);
        }

        return inventoryRepository.save(inventory);
    }

    // Check if enough stock is available for a product
    public boolean isProductInStock(Long productId, Integer quantity) {
        Inventory inventory = inventoryRepository.findByProductId(productId);
        if (inventory != null && inventory.getStockQuantity() >= quantity) {
            return true;
        } else {
            return false;
        }
    }

    // Get the inventory status of a product
    public Integer getProductStock(Long productId) {
        Inventory inventory = inventoryRepository.findByProductId(productId);
        if (inventory != null) {
            return inventory.getStockQuantity();
        } else {
            throw new RuntimeException("Inventory not found for product");
        }
    }
}
